name: Firmware publish

on:
  push:
    paths:
      - 'firmware/**'
      - 'scripts/**'
      - 'manifest.json'
      - 'firmware-*.json'
      - '.github/workflows/firmware-publish.yml'
  release:
    types: [published]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: github-pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Sync firmware assets from release
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          python scripts/sync-from-releases.py \
            --repo "${GITHUB_REPOSITORY}" \
            --release-id "${{ github.event.release.id }}" \
            --target-dir firmware

      - name: Generate firmware manifests
        run: |
          set -euo pipefail
          python scripts/gen-manifests.py \
            --firmware-dir firmware \
            --manifest-path manifest.json \
            --manifest-prefix firmware- \
            --summary

      - name: Validate Ceiling-POE-AirIQBase manifest
        run: |
          set -euo pipefail
          if command -v python >/dev/null 2>&1; then
            python scripts/gen-manifests.py \
              --firmware-dir firmware \
              --manifest-path manifest.json \
              --manifest-prefix firmware- \
              --assert-config Ceiling-POE-AirIQBase \
              --summary
          else
            echo "Python unavailable; falling back to grep"
            grep -qi 'Ceiling-POE-AirIQBase' manifest.json || {
              echo "Ceiling-POE-AirIQBase config missing from manifest.json" >&2
              exit 1
            }
          fi

      - name: Prepare Pages artifact
        run: |
          set -euo pipefail
          rm -rf public
          rsync -a \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'node_modules' \
            --exclude 'public' \
            ./ ./public

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
